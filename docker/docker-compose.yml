version: '3.8'

services:
  # FastAPI 应用服务
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: template-python-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/template_db
      - DB_ECHO=false
      - DEBUG=false
      - LOG_LEVEL=INFO
      - LOG_TO_CONSOLE=true
      - LOG_TO_FILE=true
      - APP_NAME=FastAPI Template
      - APP_VERSION=1.0.0
    volumes:
      - ../logs:/app/logs
      - ../uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL 数据库服务
  db:
    image: postgres:15-alpine
    container_name: template-python-db
    environment:
      - POSTGRES_DB=template_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  # Redis 缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: template-python-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
